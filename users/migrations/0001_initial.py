# Generated by Django 4.0.6 on 2022-08-15 08:43

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


def combine_names(apps, schema_editor):
    # We can't import the Person model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    Departments = apps.get_model('users', 'Departments')
    Departments.objects.create(internal_code=0, division=0, shopkey=0, shopkey_oc=0, name='Нет подразделения')
    PositionNames = apps.get_model('users', 'PositionNames')
    PositionNames.objects.create(position_name='Новый пользователь')


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_code', models.SmallIntegerField(default=0, unique=True, verbose_name='Внутренний код')),
                ('division', models.CharField(choices=[('0', 'Нет подразделения'), ('1', 'Кемерово'), ('2', 'Белово'), ('3', 'Межгород')], default=0, max_length=10, verbose_name='Подразделение')),
                ('shopkey', models.SmallIntegerField(default=0, unique=True, verbose_name='Номер для отображения')),
                ('shopkey_oc', models.SmallIntegerField(default=0, unique=True, verbose_name='Номер в ОЦ')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование')),
            ],
        ),
        migrations.CreateModel(
            name='PositionNames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_name', models.CharField(max_length=64, unique=True, verbose_name='Должность')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=64, unique=True, verbose_name='username')),
                ('surname', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('position', models.ForeignKey(default=1, max_length=64, on_delete=django.db.models.deletion.PROTECT, to='users.positionnames')),
                ('shopkey', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='users.departments', to_field='internal_code')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunPython(combine_names),
    ]
